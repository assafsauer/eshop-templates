---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ cookiecutter.component.name }}
  namespace: {{ cookiecutter.component.attributes.namespace }}
  labels:
    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/component: "server"
    app.kubernetes.io/part-of: "{{ cookiecutter.configuration.system_name | slugify }}"
    app.kubernetes.io/managed-by: "stacktic"
imagePullSecrets:
  - name: registry-credential
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ cookiecutter.component.name }}
  namespace: {{ cookiecutter.component.attributes.namespace }}
  labels:
    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/component: "server"
    app.kubernetes.io/part-of: "{{ cookiecutter.configuration.system_name | slugify }}"
    app.kubernetes.io/managed-by: "stacktic"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
      app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
        app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
        app.kubernetes.io/component: "server"
        app.kubernetes.io/part-of: "{{ cookiecutter.configuration.system_name | slugify }}"
        app.kubernetes.io/managed-by: "stacktic"
    spec:
      serviceAccountName: {{ cookiecutter.component.name }}
      containers:
        - image: {{ cookiecutter.configuration.registry_host }}/{{ cookiecutter.configuration.registry_project }}/{{ cookiecutter.component.name }}:{{ cookiecutter.component.attributes.version }}
          name: app
          imagePullPolicy: Always
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: "0.25"
              memory: 256Mi
          ports:
            - containerPort: 8080
              name: http
          envFrom:
            - configMapRef:
                name: {{ cookiecutter.component.name }}-config
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
                    app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
                topologyKey: kubernetes.io/hostname
              weight: 1
---
apiVersion: v1
kind: Service
metadata:
  name: {{ cookiecutter.component.name }}
  namespace: {{ cookiecutter.component.attributes.namespace }}
  labels:
    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/component: "server"
    app.kubernetes.io/part-of: "{{ cookiecutter.configuration.system_name | slugify }}"
    app.kubernetes.io/managed-by: "stacktic"
spec:
  type: {{ cookiecutter.component.attributes.service_type }}
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
{% if cookiecutter.__ingress != '' -%}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ cookiecutter.component.name }}
  namespace: {{ cookiecutter.component.attributes.namespace }}
  labels:
    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/component: "server"
    app.kubernetes.io/part-of: "{{ cookiecutter.configuration.system_name | slugify }}"
    app.kubernetes.io/managed-by: "stacktic"
  annotations:
    cert-manager.io/cluster-issuer: "issuer"
    {%- set plugins = [] %}
    {%- if cookiecutter.__ingress.attributes.cors %}
    {%- set plugins = plugins + [cookiecutter.component.name ~ '-cors'] %}
    {%- endif %}
    {%- if cookiecutter.__ingress.attributes.rate_limiting %}
    {%- set plugins = plugins + [cookiecutter.component.name ~ '-rate-limit'] %}
    {%- endif %}
    {%- if plugins %}
    konghq.com/plugins: {{ plugins | join(',') }}
    {%- endif %}
spec:
  ingressClassName: "{{ cookiecutter.__ingress.component.type }}"
  rules:
    - host: {{ cookiecutter.component.name }}.{{ cookiecutter.configuration.domain }}
      http:
        paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: {{ cookiecutter.component.name }}
                  port:
                    name: http
  tls:
    - hosts:
        - {{ cookiecutter.component.name }}.{{ cookiecutter.configuration.domain }}
      secretName: wildcard-tls-secret
{%- endif %}
{% if cookiecutter.__prometheus != '' -%}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ cookiecutter.component.name }}
  namespace: {{ cookiecutter.__prometheus.component.attributes.namespace }}
  labels:
    app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
    app.kubernetes.io/component: "server"
    app.kubernetes.io/part-of: "{{ cookiecutter.configuration.system_name | slugify }}"
    app.kubernetes.io/managed-by: "stacktic"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ cookiecutter.component.name }}"
      app.kubernetes.io/instance: "{{ cookiecutter.component.name }}"
  endpoints:
    - port: http
      interval: 15s
      path: /actuator/prometheus
  namespaceSelector:
    matchNames:
      - {{ cookiecutter.component.attributes.namespace }}
{%- endif %}


